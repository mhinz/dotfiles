#!/usr/bin/env bash

cmds=(
    dhcp
    info
    list
    save
    ssh
    start
    stop
)

usage() {
    printf 'vm %s\n' "${cmds[@]}"
    exit 0
}

list_vms() {
    declare -A vms

    while read -r line; do
        if [[ $line =~ ^\"(.*)\" ]]; then
            vms[${BASH_REMATCH[1]}]=
        fi
    done < <(VBoxManage list vms)

    while read -r line; do
        if [[ $line =~ ^\"(.*)\" ]]; then
            vms[${BASH_REMATCH[1]}]='[running]'
        fi
    done < <(VBoxManage list runningvms)

    for vm in "${!vms[@]}"; do
        if [[ ${vms[$vm]} =~ running ]]; then
            echo -e "   -> \e[1m$vm ${vms[$vm]}\e[0m"
        else
            echo "   -> $vm ${vms[$vm]}"
        fi
    done | sort
}

case "$1" in
    dhcp)
        VBoxManage list dhcpservers
        ;;
    info)
        if (( $# < 2 )); then
            echo 'vm info <vm>'
            list_vms
            exit 0
        fi
        VBoxManage showvminfo "$2"
        ;;
    l*)
        list_vms
        ;;
    save)
        if (( $# < 2 )); then
            echo 'vm save <vm>'
            list_vms
            exit 0
        fi
        VBoxManage controlvm "$2" savestate
        ;;
    ssh)
        shift
        # work around SSH banner timeout
        # ConnectionAttempts/ConnectTimeout won't help here
        while ! nc localhost 3022 </dev/null; do sleep 1; done
        exec ssh \
            -o UserKnownHostsFile=/dev/null \
            -o StrictHostKeyChecking=no \
            -p3022 -A "$@" mhi@localhost
        ;;
    start)
        if (( $# < 2 )); then
            echo 'vm start <vm>'
            list_vms
            exit 0
        fi
        # VBoxManage modifyvm "$2" --nic1 bridged
        VBoxManage modifyvm "$2" --nic1 nat
        VBoxManage modifyvm "$2" --natpf1 'ssh,tcp,,3022,,22' 2>/dev/null
        VBoxHeadless --startvm "$2" &
        vm ssh
        ;;
    stop)
        if (( $# < 2 )); then
            vm="$(VBoxManage list runningvms | head -n1 | cut -d'"' -f2)"
            [[ -z $vm ]] && exit 1
        else
            vm="$2"
        fi
        VBoxManage controlvm "$vm" poweroff
        ;;
    *)
        usage
esac
